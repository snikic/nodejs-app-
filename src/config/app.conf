// --------------------------------------------------
//    Syntax (superset of JSON): http://hjson.org/
// --------------------------------------------------
//   Default settings if not (partially) overridden
//   by another configuration file or environment
//   variables.
// --------------------------------------------------

// Enables debug options; should only be set to true during local testing and never in production
"debug": false
// The log level for dependencies (not the app itself!)
"logLevel": "debug"
// the domain the service runs on
"domain": "nodejs-app.dev.lprnd.net"
// data center in which nodejs-app is currently deployed/running (Virginia, London, Sydney, etc.)
"datacenter": "localDev"
// zone in which nodejs-app is currently deployed/running (z0 (qa), z1-a, z1, z2, ...)
"zone": "z0"
// http(s) proxy used for requests targeting servers outside of the LP farm (this is only needed in Alpha and GA)
"proxyHosts": {
    "Virginia": "http://stm04:8080" // Alpha & VA
    "Oakland": "http://rstm04:8080"
    "London": "http://slvr-mng17:8080"
    "Amsterdam": "http://ravr-mng17:8080"
    "Sydney": "http://ssvr-mng04:8080"
    "Melbourne": "http://rmor-mop100:8080"
}
// path retrieved by k8s if the pod stops unexpectedly (must be the same path as in the k8s deployment yaml file)
"terminationMessagePath": "/dev/termination-log"
// project home folder
"homeFolder": "~/nodejs-app"
// kubernetes service names (i.e. dns names)
"kubernetes": {
    "app": {
        "name": "nodejs-app-app"
        "address": "" // set dynamically if available
    }
    "web": {
        "name": "nodejs-app-web"
        "address": "" // set dynamically if available
    }
}
// the nodejs-app/backoffice csds entry name
"csdsName": "leBackofficeInt"
// the authentication host which users should use for authentication/logging in
"authDomain": "qtvr-auth01.dev.lprnd.net"
// Server configuration
"server": {
    // The http port on which the server should listen
    "httpPort": 10080
    // HTTP Public Key Pinning (HPKP)
    // see: https://developer.mozilla.org/en-US/docs/Web/Security/Public_Key_Pinning
    "hpkp": {
        // Base64 encoded Certificate Subject Public Key Information (SPKI) fingerprint
        // get via: openssl s_client -connect www.example.com:443 | openssl x509 -pubkey -noout | openssl rsa -pubin -outform der | openssl dgst -sha256 -binary | openssl enc -base64
        "sha256s": ["tDtk6m02b/+lrj7eHM0PI7XtUGuIvOh0iHOFYRnxKKY=", "6yyaG4AQ+iCdIhJpdZEryoZBGMo+lwoyRaq2a9vXyJY="]
        // The time, in milliseconds, that the browser should remember that this site is only to be accessed using one of the pinned keys.
        // one day for now... later we can increase it
        "maxAge": 86400000
        // If this optional parameter is specified, this rule applies to all of the site's subdomains as well.
        "includeSubdomains": true
    }
    // HTTP Strict Transport Security (HSTS)
    // see: https://developer.mozilla.org/en-US/docs/Web/Security/HTTP_strict_transport_security
    "hsts": {
        // The time, in milliseconds, that the browser should remember that this site is only to be accessed using HTTPS.
        "maxAge": 10886400000     // Must be at least 18 weeks to be approved by Google
        // If this rule applies to all of the site's subdomains as well.
        "includeSubdomains": true // Must be enabled to be approved by Google
        // Enable Preloading Strict Transport Security
        "preload": true
    }
}
// LP service directory:
// the password for authentication can be provied in two ways:
// - include a "password" property which holds the password in plain text
// - include a "credentials" property which holds the password encrypted by "lp-js-cipherpass"
// if the "credentials" property is provided, it takes precedence of the "password" property
"serviceDirectory": {
    "url": "ldap://192.168.21.128"
    "port": "389"
    "username": "cn=dirmgr"
    "credentials": "814b20c8c138bae7ed5db9"
    "ldapDN": "o=QA9.7.0.0,o=ServiceDirectory,o=liveperson"
    "pollRate": 10
    "timeout": 2500
}
// LP gatekeeper configuration:
"gateKeeper": {
    // username, password, and hosts will be set dynamically
    "username": ""
    "password": ""
    "hosts": []
    "keyspace": "le_session_token_store"
    "timeout": 5000
    "cache": {
        "enable": false
        "ttl": 120
        "interval": 5
        "maxKeys": 20000
     }
     "serviceType": "Cassandra_le_session_token_store_nodejs"
}
// The LP logger configuration, see: https://lpgithub.dev.lprnd.net/WebJedi/lp-js-logger
"logger": {
    "levels": {
        "debug": "debug"
        "info": "info"
        "warn": "warn"
        "error": "error"
    }
    "logging": {
        "system": {
            "console": {
                "colorize": true
                "timestamp": false
                "level": "debug"
            }
        }
    }
}

// LP CSDS configuration:
"csds": {
    "domain": "hc1n.dev.lprnd.net"
    "ttl": 600000
    "interval": 60000
    "queuePerSite": 50000
}

//Salesforce configuration
"salesforce": {
    "loginUrl": "https://test.salesforce.com"
    "username": "snikic@liveperson.com"
    "password": "5uKGI98vN5"
    "securityToken" : "YGFH0PUMqHzSOCg94YAEvsnQ"
}

// GA configuration
"ga": {
    "account": "UA-82198138"
    "id": "1" // '1' for local/dev/testing
}
